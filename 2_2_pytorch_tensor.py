# -*- coding: utf-8 -*-
"""2-2-pytorch_tensor.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/gist/eunjaelim/dfa7425320f13a7e4229613df3723df1/2-2-pytorch_tensor.ipynb
"""

import torch







data=[[1,2],[3,4]]

t = torch.tensor(data)

print(t,t.dtype,t.shape)

t = torch.tensor([[1,2],[3,4]])
print(t,t.dtype,t.shape)

t_cpu = torch.tensor([[1,2],[3,4]],device='cpu') # cpu 사용
t_gpu = torch.tensor([[1,2],[3,4]],device='cuda') # gpu 사용

print(t_cpu,t_gpu)

t_32 = torch.tensor([[1,2],[3,4]])
t_64 = torch.tensor([[1,2],[3,4]],dtype = torch.float64) # 데이터형 설정
print(t_32)
print(t_64)

t=torch.arange(0,10)
print(t)

t = torch.zeros(3,2)
print(t,t.shape)

t= t.to('cuda') #gpu로 보내기

print(t)

t = torch.randn(3,2) #랜덤 생성
print(t)

t_data = t.data.tolist() # 데이터를 파이썬에서 제공하는 list로 변환
print(t_data)

t = torch.rand(2,3)
cpu = torch.device('cpu')
gpu = torch.device('cuda')
if torch.cuda.is_available():
  t_gpu = t.to(gpu)

t_cpu = t_gpu.to(cpu)
print(t_cpu)

t = torch.ones(3,2)
t = t.to('cuda')
print(t)

t = torch.rand(2,3)
t_ones = torch.ones_like(t)
t_zeros = torch.zeros_like(t)
print(t_ones,t_zeros)

t_T = torch.Tensor([[1,2,3],[4,5,6]])
t_FT = torch.FloatTensor([[1,2,3],[4,5,6]])
print(t_T,t_FT)

t_T = t_T.type(dtype=torch.IntTensor)
print(t_T)

